/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useRef, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export default function Model(props) {
    const group = useRef()
    const { nodes, materials } = useGLTF('./penguin.gltf')

    // on load
    useEffect(()=> {
    }, [])
    useEffect(()=> {
        group.current.rotation.x += 0.04
        group.current.rotation.y += 0.02
    }, [])

    // Animate model
    // useFrame(() => {
    //     group.current.rotation.x += 0.04
    //     group.current.rotation.y += 0.02
    // })

    return (
        <group ref={group} {...props} dispose={null}>
        <group rotation={[0.21, 0, 0]} scale={[0.78, 1.13, 0.33]}>
            <mesh
            castShadow
            receiveShadow
            geometry={nodes.Sphere021.geometry}
            material={materials['Clay.004']}
            />
            <mesh
            castShadow
            receiveShadow
            geometry={nodes.Sphere021_1.geometry}
            material={materials.Yello}
            />
            <mesh
            castShadow
            receiveShadow
            geometry={nodes.Sphere021_2.geometry}
            material={materials.Clay}
            />
            <mesh
            castShadow
            receiveShadow
            geometry={nodes.Sphere021_3.geometry}
            material={materials['Clay.003']}
            />
            <mesh
            castShadow
            receiveShadow
            geometry={nodes.Sphere021_4.geometry}
            material={materials['Clay.005']}
            />
            <mesh
            castShadow
            receiveShadow
            geometry={nodes.Sphere021_5.geometry}
            material={materials['Clay.006']}
            />
        </group>
        </group>
    )
}

useGLTF.preload('/penguin.gltf')